File system in UNIX/Linux
In its simplest form, a file system is a set of files, stored in a memory based device.
In UNIX/Linux files are regular or special (directories, links, binary, symbolic etc.). In other words, directories are also files. They can contain files, in particular - other directories. This is how a hierarchical structure of the file system, that can be visually represented as a tree, is built.


The root of this tree is called head (root) directory and is represented by a forward slash (/).
Each file has a name (unique within its directory), size (bytes number), owner (the user, who created it), a group (the owner's group), date of creation, access rights and so on.
The file name can contain arbitrary symbols (without /), but it's prefferable to only contain letters, digits and some punctuation marks without special meaning (like _, ., -). UNIX/Linux distinguishes uppercase and lowercase letters, both in file names and in commands, as well as everywhere else.
In UNIX/Linux, the term "file extention" doesn't exist. The file name can end in .txt, .doc, .c and so on, but that's not an extention, it's a part of the file's name and the operating system is in no way interrested in it. Some apps, however (like the C compiler), require the file's name to end a certain way.
The directory the user is currently in is called a current (working) directory. Initially it's their own personal user directory, called HOME.
Files in the current directory are available by name, but files in other directories are only available via using their full name.
A file's full name is a list of the names of the directories needed to go through, to reach the file, separated by forward slash (/). The full name can be set based on the main directory - it's called an absolute full name and starts with a forward slash (/), and it can also be set based on the current directory - it's called a relative full name.
Each directory contains 2 special directories: the current directory - it's represented by a dot (.); parent directory - it's represented by 2 dots (..).
